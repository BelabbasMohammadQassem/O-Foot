{% extends 'base.html.twig' %}

{% block title %}O'FOOT - Résultats{% endblock %}



{% block body %}
<div class="container mt-4 custom-contact-container">
    <div class="row">
        <div class="col text-center">
            <div class="rounded-pill bg-dark d-inline-block p-3">
                <h2 class="section-title m-0">Résultats du {{ tournamentRead.TournamentName }}</h2>
            </div>
        </div>
    </div>

    <div class="accordion mt-4" id="tournamentAccordion">

        <!-- Huitièmes de finale -->
        <div class="accordion-item mb-2">
            <h2 class="accordion-header" id="headingEight">
                <button class="accordion-button text-center" type="button" data-bs-toggle="collapse" data-bs-target="#collapseEight" aria-expanded="true" aria-controls="collapseEight">
                    Huitièmes de finale
                </button>
            </h2>
            <div id="collapseEight" class="accordion-collapse collapse show" aria-labelledby="headingEight" data-bs-parent="#tournamentAccordion">
                <div class="accordion-body">
                    <div class="round">
                        {% for i in 1..8 %}
                        <div class="match">
                            <div class="match-header">Match {{ i }}</div>
                            <div class="teams">
                                <input class="input" type="text" id="team1-match{{ i }}" placeholder="{Équipe 1}" readonly>
                                <input class="input" type="text" id="team2-match{{ i }}" placeholder="Équipe 2" readonly>
                            </div>
                            <div class="result">
                                <input class="input" type="text" id="result1-match{{ i }}" placeholder="Résultat" readonly>
                            </div>
                        </div>
                        {% endfor %}
                    </div>
                </div>
            </div>
        </div>

        <!-- Quarts de finale -->
        <div class="accordion-item mb-2">
            <h2 class="accordion-header" id="headingQuarter">
                <button class="accordion-button collapsed text-center" type="button" data-bs-toggle="collapse" data-bs-target="#collapseQuarter" aria-expanded="false" aria-controls="collapseQuarter">
                    Quarts de finale
                </button>
            </h2>
            <div id="collapseQuarter" class="accordion-collapse collapse" aria-labelledby="headingQuarter" data-bs-parent="#tournamentAccordion">
                <div class="accordion-body">
                    <div class="round">
                        {% for i in 9..12 %}
                        <div class="match">
                            <div class="match-header">Quart de finale {{ i - 8 }}</div>
                            <div class="teams">
                                <input class="input" type="text" id="team1-match{{ i }}" placeholder="Équipe 1" readonly>
                                <input class="input" type="text" id="team2-match{{ i }}" placeholder="Équipe 2" readonly>
                            </div>
                           
                            <div class="result">
                                <input class="input" type="text" id="result1-match{{ i }}" placeholder="Résultat" readonly>
                            </div>
                        </div>
                        {% endfor %}
                    </div>
                </div>
            </div>
        </div>

        <!-- Demi-finales -->
        <div class="accordion-item mb-2">
            <h2 class="accordion-header" id="headingSemi">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseSemi" aria-expanded="false" aria-controls="collapseSemi">
                    Demi-finales
                </button>
            </h2>
            <div id="collapseSemi" class="accordion-collapse collapse" aria-labelledby="headingSemi" data-bs-parent="#tournamentAccordion">
                <div class="accordion-body">
                    <div class="round">
                        {% for i in 13..14 %}
                        <div class="match">
                            <div class="match-header">Demi-finale {{ i - 12 }}</div>
                            <div class="teams">
                                <input class="input" type="text" id="team1-match{{ i }}" placeholder="Équipe 1" readonly>
                                <input class="input" type="text" id="team2-match{{ i }}" placeholder="Équipe 2" readonly>
                            </div>
                            <div class="result">
                                <input class="input" type="text" id="result1-match{{ i }}" placeholder="Résultat" readonly>
                            </div>
                        </div>
                        {% endfor %}
                    </div>
                </div>
            </div>
        </div>

        <!-- Finale et petite finale -->
        <div class="accordion-item mb-2">
            <h2 class="accordion-header" id="headingFinal">
                <button class="accordion-button collapsed" type="button" data-bs-toggle="collapse" data-bs-target="#collapseFinal" aria-expanded="false" aria-controls="collapseFinal">
                    Finale et Petite Finale
                </button>
            </h2>
            <div id="collapseFinal" class="accordion-collapse collapse" aria-labelledby="headingFinal" data-bs-parent="#tournamentAccordion">
                <div class="accordion-body">
                    <div class="round">
                        <!-- Petite finale -->
                        <div class="match" id="thirdPlaceMatch">
                            <div class="match-header">Petite finale</div>
                            <div class="teams">
                                <input class="input" type="text" id="team1-match15" placeholder="Équipe 1" readonly>
                                <input class="input" type="text" id="team2-match15" placeholder="Équipe 2" readonly>
                            </div>
                            <div class="result">
                                <input class="input" type="text" id="result1-match15" placeholder="Résultat" readonly>
                            </div>
                        </div>

                        <!-- Finale -->
                        <div class="match" id="finalMatch">
                            <div class="match-header">Finale</div>
                            <div class="teams">
                                <input class="input" type="text" id="team1-match16" placeholder="Équipe 1" readonly>
                                <input class="input" type="text" id="team2-match16" placeholder="Équipe 2" readonly>
                            </div>
                            <div class="result">
                                <input class="input" type="text" id="result1-match16" placeholder="Résultat" readonly>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

    </div>
</div>
<script>
// Fonction pour afficher les scores
function displayScores(scores) {
    console.log('Début de l\'affichage des scores');
    // Parcours chaque score dans le tableau
    scores.forEach((score, index) => {
        // Détermine l'ID du match (utilise l'ID du score, ou l'index + 1 si non défini)
        const id = score.id || score.matchId || (index + 1);
        // Construit l'ID de l'élément HTML correspondant
        const elementId = `result1-match${id}`;
        console.log(`Recherche de l'élément avec l'ID: ${elementId}`);
        // Recherche l'élément HTML correspondant
        const resultInput = document.getElementById(elementId);
        if (resultInput) {
            // Si l'élément est trouvé, affiche sa valeur actuelle
            console.log(`Élément trouvé pour le match ${id}, valeur actuelle: ${resultInput.value}`);
            // Détermine le résultat à afficher (utilise 'result' ou 'score' du score, ou 'N/A' si non défini)
            const result = score.result || score.score || 'N/A';
            console.log(`Valeur à définir pour le match ${id}:`, result);
            // Met à jour la valeur de l'élément HTML
            resultInput.value = result;
            console.log(`Nouvelle valeur définie: ${resultInput.value}`);
        } else {
            // Si l'élément n'est pas trouvé, affiche un avertissement
            console.warn(`Élément non trouvé pour le match ${id}`);
        }
    });
}

// Vérifie que la fonction displayScores est bien définie
console.log('displayScores est définie:', typeof displayScores);

// Fonction asynchrone pour récupérer et afficher les scores
async function fetchAndDisplayScores() {
    try {
        console.log('Début de la récupération des scores...');
        // Fait une requête à l'API pour récupérer les scores
        const response = await fetch('http://localhost:8000/api/score');
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }
        // Convertit la réponse en JSON
        const scores = await response.json();
        // Affiche les données brutes reçues dans la console
        console.log('Données brutes reçues de l\'API:', JSON.stringify(scores, null, 2));
        // Appelle la fonction pour afficher les scores
        displayScores(scores);
    } catch (error) {
        // En cas d'erreur, affiche l'erreur dans la console
        console.error('Erreur lors de la récupération des scores:', error);
    }
}

// Ajoute un écouteur d'événements pour s'assurer que le DOM est chargé avant d'exécuter le code
document.addEventListener('DOMContentLoaded', () => {
    console.log('DOM chargé, lancement de fetchAndDisplayScores');
    // Vérifie si les éléments HTML pour chaque match existent
    for (let i = 1; i <= 16; i++) {
        const el = document.getElementById(`result1-match${i}`);
        console.log(`Élément result1-match${i} existe: ${el ? 'Oui' : 'Non'}`);
    }
    // Lance la récupération et l'affichage des scores
    fetchAndDisplayScores();
});
</script>
{% endblock %}


